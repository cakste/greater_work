{"ast":null,"code":"import Table from './Table.vue';\nexport default {\n  name: 'HelloWorld',\n  components: {\n    Table\n  },\n  props: {\n    msg: String\n  },\n\n  data() {\n    return {\n      count: 1,\n      APIData: [],\n      exitCode: \"STILL FETCHING...\",\n      testing: [],\n      completed: false\n    };\n  },\n\n  async mounted() {// Try Async\n\n    /*\n    const response = await fetch(\"http://dummy.restapiexample.com/api/v1/employees\");\n    const tmp = await response.data;\n    if (response.status == 429) {\n    \tthis.exitCode = \"429\";\n    \tthis.completed = false\n    }\n    else {\n    \tthis.exitCode = \"OK!\"\n    \tconsole.log(tmp)\n    \tthis.completed = true\n    }\n    this.APIData = tmp;\n    */\n\n    /* //Not Async\n    fetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n    \t.then(response => {\n    \tthis.APIData = response.data;\n    \tconsole.log(this.APIData)\n    \t})\n    \t.catch(error => {\n    \t\talert(error)\n    \t})\n    \tthis.testing = typeof(this.APIData)\n    */\n  },\n\n  methods: {\n    increment() {\n      this.count++;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AASA,OAAOA,KAAP,MAAkB,aAAlB;AAEA,eAAe;AACdC,MAAI,EAAE,YADQ;AAEdC,YAAU,EAAE;AACXF;AADW,GAFE;AAKdG,OAAK,EAAE;AACNC,OAAG,EAAEC;AADC,GALO;;AASdC,MAAI,GAAG;AACN,WAAO;AACNC,WAAK,EAAE,CADD;AAENC,aAAO,EAAE,EAFH;AAGNC,cAAQ,EAAE,mBAHJ;AAINC,aAAO,EAAE,EAJH;AAKNC,eAAS,EAAE;AALL,KAAP;AAOA,GAjBa;;AAmBd,QAAMC,OAAN,GAAgB,CACf;;AACA;;;;;;;;;;;;;;;AAeA;;;;;;;;;;;AAWA,GA/Ca;;AAiDdC,SAAO,EAAE;AACRC,aAAS,GAAG;AACX,WAAKP,KAAL;AACD;;AAHQ;AAjDK,CAAf","names":["Table","name","components","props","msg","String","data","count","APIData","exitCode","testing","completed","mounted","methods","increment"],"sourceRoot":"","sources":["/Users/cakste/Desktop/website-v3/src/components/Home.vue"],"sourcesContent":["<template>\n\t<div class=\"hello\">\n\t\t<Table />\n\t</div>\n</template>\n\n<!--// Access a child components variables? Nice to include their message. -->\n\n<script>\nimport Table from './Table.vue'\n\nexport default {\n\tname: 'HelloWorld',\n\tcomponents: {\n\t\tTable,\n\t},\n\tprops: {\n\t\tmsg: String\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tcount: 1,\n\t\t\tAPIData: [],\n\t\t\texitCode: \"STILL FETCHING...\",\n\t\t\ttesting: [],\n\t\t\tcompleted: false\n\t\t}\n\t},\n\n\tasync mounted() {\n\t\t// Try Async\n\t\t/*\n\t\tconst response = await fetch(\"http://dummy.restapiexample.com/api/v1/employees\");\n\t\tconst tmp = await response.data;\n\t\tif (response.status == 429) {\n\t\t\tthis.exitCode = \"429\";\n\t\t\tthis.completed = false\n\t\t}\n\t\telse {\n\t\t\tthis.exitCode = \"OK!\"\n\t\t\tconsole.log(tmp)\n\t\t\tthis.completed = true\n\t\t}\n\t\tthis.APIData = tmp;\n\t\t*/\n\n\t\t/* //Not Async\n\t\tfetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n\t\t\t.then(response => {\n\t\t\tthis.APIData = response.data;\n\t\t\tconsole.log(this.APIData)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\talert(error)\n\t\t\t})\n\t\t\tthis.testing = typeof(this.APIData)\n\t\t*/\n\t},\n\n\tmethods: {\n\t\tincrement() {\n\t\t\tthis.count++\n\t\t}\n\t},\n\n}\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n\n.hello {\n\tmargin: 10px 300px 10px 10px\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}