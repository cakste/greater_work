{"ast":null,"code":"export default {\n  name: 'backgroundDots',\n  components: {},\n\n  data() {\n    return {\n      count: 1,\n      vueCanvas: null,\n      ctx: null,\n      dots: null\n    };\n  },\n\n  mounted() {\n    // Try Async\n\n    /*\n    const response = await fetch(\"http://dummy.restapiexample.com/api/v1/employees\");\n    const tmp = await response.data;\n    if (response.status == 429) {\n    \tthis.exitCode = \"429\";\n    \tthis.completed = false\n    }\n    else {\n    \tthis.exitCode = \"OK!\"\n    \tconsole.log(tmp)\n    \tthis.completed = true\n    }\n    this.APIData = tmp;\n    */\n\n    /* //Not Async\n    fetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n    \t.then(response => {\n    \tthis.APIData = response.data;\n    \tconsole.log(this.APIData)\n    \t})\n    \t.catch(error => {\n    \t\talert(error)\n    \t})\n    \tthis.testing = typeof(this.APIData)\n    */\n    // ----------------------------------------\n    var canvas = document.getElementById(\"canvas\");\n    this.ctx = canvas.getContext(\"2d\");\n    this.vueCanvas = this.ctx;\n    console.log(this.vueCanvas);\n    canvas.height = window.innerHeight;\n    canvas.width = window.innerWidth;\n    console.log(canvas.height, canvas.width);\n    /*\n    this.ctx.fillStyle = \"#42b983\"\n    this.ctx.arc(0,0,50,0, 3.14*2);\n    this.ctx.fill()\n    */\n    // Set an array of dot objects.\n\n    this.dots = [{\n      x: 100,\n      y: 100,\n      radius: 25,\n      xMove: '+',\n      yMove: '+'\n    }, {\n      x: 40,\n      y: 200,\n      radius: 25,\n      xMove: '-',\n      yMove: '+'\n    }, {\n      x: 250,\n      y: 300,\n      radius: 25,\n      xMove: '+',\n      yMove: '-'\n    }, {\n      x: 150,\n      y: 35,\n      radius: 25,\n      xMove: '-',\n      yMove: '-'\n    }]; // Draw each dot in the dots array.\n\n    for (let i = 0; i < this.dots.length; i++) {\n      this.drawDot(this.dots[i]);\n    } //Set the edge of the canvas to always be window? canvas.attr({height: canvasHeight, width: canvasWidth});\n\n\n    for (let j = 0; j < 100; j++) {\n      window.requestAnimationFrame(this.moveDot);\n    } //Get to canvas css?canvas.attr({height: canvas.height, width: canvas.width});\n\n    /*\n    var canvas = $('canvas.dots');\n    //var context = canvas[0].getContext('2d');\n    var canvasWidth = canvas.width();\n    var canvasHeight = canvas.height();\n    let i;\n    \tconsole.log(canvasWidth)\n    canvas.attr({height: canvasHeight, width: canvasWidth});\n    \n    \t\t//window.requestAnimationFrame(moveDot);\n    \n    \t// Render it again\n    //window.requestAnimationFrame(moveDot);\n    */\n\n  },\n\n  methods: {\n    drawDot(dot) {\n      this.ctx.beginPath();\n      this.ctx.arc(dot.x, dot.y, dot.radius, 0, 2 * Math.PI, false);\n      this.ctx.fillStyle = '#F03C69';\n      this.ctx.fill();\n    },\n\n    moveDot() {\n      var dots = this.dots; // Notice in the moveDot function we can make dots go faster if we increment\n      // by more than 1 pixel each time.\n\n      var frameLength = 2;\n      this.context.clearRect(0, 0, window.innerHeight, window.innerWidth); // Iterate over all the dots.\n\n      for (let i = 0; i < dots.length; i++) {\n        if (dots[i].xMove == '+') {\n          dots[i].x += frameLength;\n        } else {\n          dots[i].x -= frameLength;\n        }\n\n        if (dots[i].yMove == '+') {\n          dots[i].y += frameLength;\n        } else {\n          dots[i].y -= frameLength;\n        }\n\n        this.drawDot(dots[i]);\n\n        if (dots[i].x + dots[i].radius >= window.innerWidth) {\n          dots[i].xMove = '-';\n        }\n\n        if (dots[i].x - dots[i].radius <= 0) {\n          dots[i].xMove = '+';\n        }\n\n        if (dots[i].y + dots[i].radius >= window.innerHeight) {\n          dots[i].yMove = '-';\n        }\n\n        if (dots[i].y - dots[i].radius <= 0) {\n          dots[i].yMove = '+';\n        }\n      }\n    }\n\n  }\n}; // ----------------------------------------","map":{"version":3,"mappings":"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","names":["name","components","data","count","vueCanvas","ctx","dots","mounted","canvas","document","getElementById","getContext","console","log","height","window","innerHeight","width","innerWidth","x","y","radius","xMove","yMove","i","length","drawDot","j","requestAnimationFrame","moveDot","methods","dot","beginPath","arc","Math","PI","fillStyle","fill","frameLength","context","clearRect"],"sourceRoot":"","sources":["/Users/cakste/Desktop/website-v3/src/components/Dots2.vue"],"sourcesContent":["<template>\n\n\t<html lang=\"en\">\n\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<canvas id=\"canvas\" v-on:click=\"moveDot()\"></canvas>\n\t\t\t<h1>TEST</h1>\n\t\t</div>\n\n\t</body>\n\t</html>\n</template>\n\n<!--// Access a child components variables? Nice to include their message. -->\n\n<script>\n\nexport default {\n\tname: 'backgroundDots',\n\tcomponents: {\n\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tcount: 1,\n\t\t\tvueCanvas: null,\n\t\t\tctx: null,\n\t\t\tdots: null,\n\t\t}\n\t},\n\n\tmounted() {\n\t\t// Try Async\n\t\t/*\n\t\tconst response = await fetch(\"http://dummy.restapiexample.com/api/v1/employees\");\n\t\tconst tmp = await response.data;\n\t\tif (response.status == 429) {\n\t\t\tthis.exitCode = \"429\";\n\t\t\tthis.completed = false\n\t\t}\n\t\telse {\n\t\t\tthis.exitCode = \"OK!\"\n\t\t\tconsole.log(tmp)\n\t\t\tthis.completed = true\n\t\t}\n\t\tthis.APIData = tmp;\n\t\t*/\n\n\t\t/* //Not Async\n\t\tfetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n\t\t\t.then(response => {\n\t\t\tthis.APIData = response.data;\n\t\t\tconsole.log(this.APIData)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\talert(error)\n\t\t\t})\n\t\t\tthis.testing = typeof(this.APIData)\n\t\t*/\n\n\t\t// ----------------------------------------\n\n\n\t\tvar canvas = document.getElementById(\"canvas\");\n\t\tthis.ctx = canvas.getContext(\"2d\");\n\t\tthis.vueCanvas = this.ctx;\n\t\tconsole.log(this.vueCanvas)\n\n\t\tcanvas.height = window.innerHeight;\n\t\tcanvas.width = window.innerWidth;\n\t\tconsole.log(canvas.height, canvas.width)\n\n\t\t/*\n\t\tthis.ctx.fillStyle = \"#42b983\"\n\t\tthis.ctx.arc(0,0,50,0, 3.14*2);\n\t\tthis.ctx.fill()\n\t\t*/\n\n\n\n\t\t// Set an array of dot objects.\n\t\tthis.dots = [\n\t\t\t{ x: 100, y: 100, radius: 25, xMove: '+', yMove: '+' },\n\t\t\t{ x: 40, y: 200, radius: 25, xMove: '-', yMove: '+' },\n\t\t\t{ x: 250, y: 300, radius: 25, xMove: '+', yMove: '-' },\n\t\t\t{ x: 150, y: 35, radius: 25, xMove: '-', yMove: '-' }\n\t\t];\n\n\t\t// Draw each dot in the dots array.\n\t\tfor(let i = 0; i < this.dots.length; i++ ) {\n\t\t\tthis.drawDot(this.dots[i]);\n\t\t}\n\t\t//Set the edge of the canvas to always be window? canvas.attr({height: canvasHeight, width: canvasWidth});\n\n\t\tfor(let j = 0; j < 100; j++) {\n\t\t\twindow.requestAnimationFrame(this.moveDot);\n\t\t}\n\n\t\t//Get to canvas css?canvas.attr({height: canvas.height, width: canvas.width});\n\t\t/*\n\t\tvar canvas = $('canvas.dots');\n\t\t//var context = canvas[0].getContext('2d');\n\t\tvar canvasWidth = canvas.width();\n\t\tvar canvasHeight = canvas.height();\n\t\tlet i;\n\n\t\tconsole.log(canvasWidth)\n\t\tcanvas.attr({height: canvasHeight, width: canvasWidth});\n\n\n\n\n\n\t\t//window.requestAnimationFrame(moveDot);\n\n\n\n\n\t\t// Render it again\n\t\t//window.requestAnimationFrame(moveDot);\n\t\t*/\n\n\t},\n\n\tmethods: {\n\t\tdrawDot(dot) {\n\t\t\tthis.ctx.beginPath();\n\t\t\tthis.ctx.arc(dot.x, dot.y, dot.radius, 0, 2 * Math.PI, false);\n\t\t\tthis.ctx.fillStyle = '#F03C69';\n\t\t\tthis.ctx.fill();\n\t\t},\n\t\tmoveDot() {\n\n\t\t\tvar dots = this.dots\n\t\t\t// Notice in the moveDot function we can make dots go faster if we increment\n\t\t\t// by more than 1 pixel each time.\n\t\t\tvar frameLength = 2;\n\n\t\t\tthis.context.clearRect(0, 0, window.innerHeight, window.innerWidth)\n\t\t\t// Iterate over all the dots.\n\t\t\tfor(let i = 0; i < dots.length; i++ ) {\n\n\t\t\t\tif( dots[i].xMove == '+' ) {\n\t\t\t\t\tdots[i].x += frameLength;\n\t\t\t\t} else {\n\t\t\t\t\tdots[i].x -= frameLength;\n\t\t\t\t}\n\t\t\t\tif( dots[i].yMove == '+' ) {\n\t\t\t\t\tdots[i].y += frameLength;\n\t\t\t\t} else {\n\t\t\t\t\tdots[i].y -= frameLength;\n\t\t\t\t}\n\n\t\t\t\tthis.drawDot(dots[i])\n\n\t\t\t\tif( (dots[i].x + dots[i].radius) >= window.innerWidth ) {\n\t\t\t\t\tdots[i].xMove = '-';\n\t\t\t\t}\n\t\t\t\tif( (dots[i].x - dots[i].radius) <= 0 ) {\n\t\t\t\t\tdots[i].xMove = '+';\n\t\t\t\t}\n\t\t\t\tif( (dots[i].y + dots[i].radius) >= window.innerHeight ) {\n\t\t\t\t\tdots[i].yMove = '-';\n\t\t\t\t}\n\t\t\t\tif( (dots[i].y - dots[i].radius) <= 0 ) {\n\t\t\t\t\tdots[i].yMove = '+';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t}\n}\n\n\n\n\n// ----------------------------------------\n\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n\n\n</style>\n"]},"metadata":{},"sourceType":"module"}