{"ast":null,"code":"export default {\n  name: 'HelloWorld2',\n  props: {\n    msg2: String\n  },\n\n  data() {\n    return {\n      users: null\n    };\n  },\n\n  async created() {\n    const data_fetched = false;\n\n    while (data_fetched === false) {\n      try {\n        const response = await fetch(\"http://dummy.restapiexample.com/api/v1/employees\");\n        const response_json = await response.json();\n        this.users = response_json.data;\n        break;\n      } catch (e) {\n        console.log(\"Error occured\"); // Some type of sleep function? Not really sure how this too many requests occur.\n\n        continue;\n      }\n    }\n    /*\n    const response = await fetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n    const response_json = await response.json()\n    \tthis.users = response_json.data\n    // need to do error handling.\n    */\n\n  }\n\n};","map":{"version":3,"mappings":"AAiBA,eAAe;AACdA,MAAI,EAAE,aADQ;AAEdC,OAAK,EAAE;AACNC,QAAI,EAAEC;AADA,GAFO;;AAMdC,MAAG,GAAK;AACP,WAAO;AACNC,WAAK,EAAE;AADD,KAAP;AAGA,GAVa;;AAYd,QAAMC,OAAN,GAAiB;AAChB,UAAMC,YAAW,GAAI,KAArB;;AAEA,WAAOA,YAAW,KAAM,KAAxB,EAA+B;AAC9B,UAAI;AACH,cAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,kDAAD,CAA5B;AACA,cAAMC,aAAY,GAAI,MAAMF,QAAQ,CAACG,IAAT,EAA5B;AAEA,aAAKN,KAAL,GAAaK,aAAa,CAACN,IAA3B;AACA;AACD,OANA,CAME,OAAOQ,CAAP,EAAU;AACXC,eAAO,CAACC,GAAR,CAAY,eAAZ,EADW,CAEX;;AACA;AACD;AAED;AAEA;;;;;;;AAOA;;AArCa,CAAf","names":["name","props","msg2","String","data","users","created","data_fetched","response","fetch","response_json","json","e","console","log"],"sourceRoot":"","sources":["/Users/cakste/Desktop/website-v3/src/components/Table.vue"],"sourcesContent":["<template>\n  <div class=\"table\">\n    <h1> {{ msg2 }}</h1>\n\t<h1>Hello Table</h1>\n\t<ul>\n\t\t<li v-for=\"(user, i) in users\" :key=\"i\">\n\t\t\t{{ user.employee_name }}\n\t\t</li>\n\t\t<li>\n\t\t\t<p>dslkf</p>\n\t\t</li>\n\t</ul>\n\t<!---<p>{{ users }}</p> -->\n  </div>\n</template>\n\n<script>\nexport default {\n\tname: 'HelloWorld2',\n\tprops: {\n\t\tmsg2: String,\n\t},\n\n\tdata () {\n\t\treturn {\n\t\t\tusers: null,\n\t\t}\n\t},\n\n\tasync created () {\n\t\tconst data_fetched = false\n\n\t\twhile (data_fetched === false) {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n\t\t\t\tconst response_json = await response.json()\n\n\t\t\t\tthis.users = response_json.data\n\t\t\t\tbreak;\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(\"Error occured\")\n\t\t\t\t// Some type of sleep function? Not really sure how this too many requests occur.\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t}\n\n\t\t/*\n\t\tconst response = await fetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n\t\tconst response_json = await response.json()\n\n\t\tthis.users = response_json.data\n\t\t// need to do error handling.\n\t\t*/\n\t},\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}