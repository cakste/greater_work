{"ast":null,"code":"/* Todo\n\t* Create a refresh button?\n\n\n*/\nexport default {\n  name: 'HelloWorld2',\n  props: {\n    msg2: String\n  },\n\n  data() {\n    return {\n      users: null,\n      filledData: null,\n      columns: null\n    };\n  },\n\n  async created() {\n    const data_fetched = false; //Fetch the data upon creation of the component.\n\n    while (data_fetched === false) {\n      try {\n        const response = await fetch(\"http://dummy.restapiexample.com/api/v1/employees\");\n        const response_json = await response.json();\n        this.users = response_json.data;\n        break;\n      } catch (e) {\n        console.log(\"Error occured\"); // Some type of sleep function? Not really sure how this too many requests occur.\n\n        continue;\n      }\n    }\n  },\n\n  computed: {\n    getColumns() {//Gets columns based on our computed value.\n    }\n\n  },\n  methods: {\n    fillOutData() {\n      // We should not assume that all keys are the same in the rows.\n      let keyValues = [];\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA2CA;;;;AAIA;AAEA,eAAe;AACdA,MAAI,EAAE,aADQ;AAEdC,OAAK,EAAE;AACNC,QAAI,EAAEC;AADA,GAFO;;AAMdC,MAAG,GAAK;AACP,WAAO;AACNC,WAAK,EAAE,IADD;AAENC,gBAAU,EAAE,IAFN;AAGNC,aAAO,EAAE;AAHH,KAAP;AAKA,GAZa;;AAcd,QAAMC,OAAN,GAAiB;AAChB,UAAMC,YAAW,GAAI,KAArB,CADgB,CAGhB;;AACA,WAAOA,YAAW,KAAM,KAAxB,EAA+B;AAC9B,UAAI;AACH,cAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,kDAAD,CAA5B;AACA,cAAMC,aAAY,GAAI,MAAMF,QAAQ,CAACG,IAAT,EAA5B;AAEA,aAAKR,KAAL,GAAaO,aAAa,CAACR,IAA3B;AACA;AACD,OANA,CAME,OAAOU,CAAP,EAAU;AACXC,eAAO,CAACC,GAAR,CAAY,eAAZ,EADW,CAEX;;AACA;AACD;AACD;AACA,GA/Ba;;AAgCdC,UAAQ,EAAE;AACTC,cAAS,GAAK,CACb;AACA;;AAHQ,GAhCI;AAqCdC,SAAO,EAAE;AACRC,eAAU,GAAK;AACd;AACA,UAAIC,SAAQ,GAAI,EAAhB;AAKA;;AARO;AArCK,CAAf","names":["name","props","msg2","String","data","users","filledData","columns","created","data_fetched","response","fetch","response_json","json","e","console","log","computed","getColumns","methods","fillOutData","keyValues"],"sourceRoot":"","sources":["/Users/cakste/Desktop/website-v3/src/components/Table.vue"],"sourcesContent":["<template>\n  <div class=\"table\">\n\t<table id=\"myTable1\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<!---Could change so i read in the Table headers as variables instead\n\t\t\t\t\tThen need to to a valitidy check of the data, so that all items in the json object\n\t\t\t\t\tcontains the same keys and values.\n\t\t\t\t-->\n\t\t\t\t<th>ID</th>\n\t\t\t\t<th>Employee Name</th>\n\t\t\t\t<th>Employee Salary</th>\n\t\t\t\t<th>Employee Age</th>\n\t\t\t\t<th>Profile Image</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<tr v-for=\"(user, i) in users\" :key=\"i\">\n\t\t\t\t<td> {{ user.id }} </td>\n\t\t\t\t<td> {{ user.employee_name}} </td>\n\t\t\t\t<td> {{ user.employee_salary }} </td>\n\t\t\t\t<td> {{ user.employee_age }} </td>\n\t\t\t\t<td> {{ user.profile_image}} </td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t<table>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<th v-for=\"col in columns\">\n\t\t\t\t\t{{col}}\n\t\t\t\t</th>\n    \t\t</tr>\n\t\t</thead>\n\n\t</table>\n\t<p>{{ users }}</p>\n  </div>\n</template>\n\n\n\n<script>\n/* Todo\n\t* Create a refresh button?\n\n\n*/\n\nexport default {\n\tname: 'HelloWorld2',\n\tprops: {\n\t\tmsg2: String,\n\t},\n\n\tdata () {\n\t\treturn {\n\t\t\tusers: null,\n\t\t\tfilledData: null,\n\t\t\tcolumns: null,\n\t\t}\n\t},\n\n\tasync created () {\n\t\tconst data_fetched = false\n\n\t\t//Fetch the data upon creation of the component.\n\t\twhile (data_fetched === false) {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n\t\t\t\tconst response_json = await response.json()\n\n\t\t\t\tthis.users = response_json.data\n\t\t\t\tbreak;\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(\"Error occured\")\n\t\t\t\t// Some type of sleep function? Not really sure how this too many requests occur.\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t},\n\tcomputed: {\n\t\tgetColumns () {\n\t\t\t//Gets columns based on our computed value.\n\t\t},\n\t},\n\tmethods: {\n\t\tfillOutData () {\n\t\t\t// We should not assume that all keys are the same in the rows.\n\t\t\tlet keyValues = []\n\n\n\n\n\t\t},\n\t}\n}\n</script>\n\n<style scoped>\n\ntable {\n  font-family: 'Open Sans', sans-serif;\n  width: 750px;\n  border-collapse: collapse;\n  border: 3px solid #44475C;\n  margin: 10px 10px 0 10px;\n}\n\ntable th {\n  text-transform: uppercase;\n  text-align: left;\n  background: #44475C;\n  color: #FFF;\n  padding: 8px;\n  min-width: 30px;\n}\n\ntable td {\n  text-align: left;\n  padding: 8px;\n  border-right: 2px solid #7D82A8;\n}\ntable td:last-child {\n  border-right: none;\n}\ntable tbody tr:nth-child(2n) td {\n  background: #D4D8F9;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module"}