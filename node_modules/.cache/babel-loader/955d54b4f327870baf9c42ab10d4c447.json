{"ast":null,"code":"export default {\n  name: 'backgroundDots',\n  components: {},\n\n  data() {\n    return {\n      count: 1,\n      vueCanvas: null,\n      ctx: null\n    };\n  },\n\n  mounted() {\n    // Try Async\n\n    /*\n    const response = await fetch(\"http://dummy.restapiexample.com/api/v1/employees\");\n    const tmp = await response.data;\n    if (response.status == 429) {\n    \tthis.exitCode = \"429\";\n    \tthis.completed = false\n    }\n    else {\n    \tthis.exitCode = \"OK!\"\n    \tconsole.log(tmp)\n    \tthis.completed = true\n    }\n    this.APIData = tmp;\n    */\n\n    /* //Not Async\n    fetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n    \t.then(response => {\n    \tthis.APIData = response.data;\n    \tconsole.log(this.APIData)\n    \t})\n    \t.catch(error => {\n    \t\talert(error)\n    \t})\n    \tthis.testing = typeof(this.APIData)\n    */\n    // ----------------------------------------\n    var canvas = document.getElementById(\"canvas\");\n    this.ctx = canvas.getContext(\"2d\");\n    this.vueCanvas = this.ctx;\n    console.log(this.vueCanvas);\n    canvas.height = window.innerHeight;\n    canvas.width = window.innerWidth;\n    console.log(canvas.height, canvas.width);\n    /*\n    this.ctx.fillStyle = \"#42b983\"\n    this.ctx.arc(0,0,50,0, 3.14*2);\n    this.ctx.fill()\n    */\n    // Set an array of dot objects.\n\n    var dots = [{\n      x: 100,\n      y: 100,\n      radius: 25,\n      xMove: '+',\n      yMove: '+'\n    }, {\n      x: 40,\n      y: 200,\n      radius: 25,\n      xMove: '-',\n      yMove: '+'\n    }, {\n      x: 250,\n      y: 300,\n      radius: 25,\n      xMove: '+',\n      yMove: '-'\n    }, {\n      x: 150,\n      y: 35,\n      radius: 25,\n      xMove: '-',\n      yMove: '-'\n    }]; // Draw each dot in the dots array.\n\n    for (let i = 0; i < dots.length; i++) {\n      this.drawDot(dots[i]);\n    } //Set the edge of the canvas to always be window? canvas.attr({height: canvasHeight, width: canvasWidth});\n    //Get to canvas css?canvas.attr({height: canvas.height, width: canvas.width});\n\n    /*\n    var canvas = $('canvas.dots');\n    //var context = canvas[0].getContext('2d');\n    var canvasWidth = canvas.width();\n    var canvasHeight = canvas.height();\n    let i;\n    \tconsole.log(canvasWidth)\n    canvas.attr({height: canvasHeight, width: canvasWidth});\n    \n    \t\t//window.requestAnimationFrame(moveDot);\n    \n    \t// Render it again\n    //window.requestAnimationFrame(moveDot);\n    */\n\n  },\n\n  methods: {\n    drawDot(dot) {\n      this.ctx.beginPath();\n      this.ctx.arc(dot.x, dot.y, dot.radius, 0, 2 * Math.PI, false);\n      this.ctx.fillStyle = '#42b983';\n      this.ctx.fill();\n    },\n\n    moveDot(dots) {\n      // Notice in the moveDot function we can make dots go faster if we increment\n      // by more than 1 pixel each time.\n      var frameLength = 2;\n      this.context.clearRect(0, 0, window.innerHeight, window.innerWidth); // Iterate over all the dots.\n\n      for (let i = 0; i < dots.length; i++) {\n        if (dots[i].xMove == '+') {\n          dots[i].x += frameLength;\n        } else {\n          dots[i].x -= frameLength;\n        }\n\n        if (dots[i].yMove == '+') {\n          dots[i].y += frameLength;\n        } else {\n          dots[i].y -= frameLength;\n        }\n\n        this.drawDot(dots[i]);\n\n        if (dots[i].x + dots[i].radius >= window.innerWidth) {\n          dots[i].xMove = '-';\n        }\n\n        if (dots[i].x - dots[i].radius <= 0) {\n          dots[i].xMove = '+';\n        }\n\n        if (dots[i].y + dots[i].radius >= window.innerHeight) {\n          dots[i].yMove = '-';\n        }\n\n        if (dots[i].y - dots[i].radius <= 0) {\n          dots[i].yMove = '+';\n        }\n      }\n    }\n\n  }\n}; // ----------------------------------------","map":{"version":3,"mappings":"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","names":["name","components","data","count","vueCanvas","ctx","mounted","canvas","document","getElementById","getContext","console","log","height","window","innerHeight","width","innerWidth","dots","x","y","radius","xMove","yMove","i","length","drawDot","methods","dot","beginPath","arc","Math","PI","fillStyle","fill","moveDot","frameLength","context","clearRect"],"sourceRoot":"","sources":["/Users/cakste/Desktop/website-v3/src/components/Dots2.vue"],"sourcesContent":["<template>\n\n\t<html lang=\"en\">\n\n\t<body>\n\t\t<div id=\"app\">\n\t\t\t<canvas id=\"canvas\"></canvas>\n\t\t</div>\n\t</body>\n\t</html>\n</template>\n\n<!--// Access a child components variables? Nice to include their message. -->\n\n<script>\n\nexport default {\n\tname: 'backgroundDots',\n\tcomponents: {\n\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tcount: 1,\n\t\t\tvueCanvas: null,\n\t\t\tctx: null,\n\t\t}\n\t},\n\n\tmounted() {\n\t\t// Try Async\n\t\t/*\n\t\tconst response = await fetch(\"http://dummy.restapiexample.com/api/v1/employees\");\n\t\tconst tmp = await response.data;\n\t\tif (response.status == 429) {\n\t\t\tthis.exitCode = \"429\";\n\t\t\tthis.completed = false\n\t\t}\n\t\telse {\n\t\t\tthis.exitCode = \"OK!\"\n\t\t\tconsole.log(tmp)\n\t\t\tthis.completed = true\n\t\t}\n\t\tthis.APIData = tmp;\n\t\t*/\n\n\t\t/* //Not Async\n\t\tfetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n\t\t\t.then(response => {\n\t\t\tthis.APIData = response.data;\n\t\t\tconsole.log(this.APIData)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\talert(error)\n\t\t\t})\n\t\t\tthis.testing = typeof(this.APIData)\n\t\t*/\n\n\t\t// ----------------------------------------\n\n\n\t\tvar canvas = document.getElementById(\"canvas\");\n\t\tthis.ctx = canvas.getContext(\"2d\");\n\t\tthis.vueCanvas = this.ctx;\n\t\tconsole.log(this.vueCanvas)\n\n\t\tcanvas.height = window.innerHeight;\n\t\tcanvas.width = window.innerWidth;\n\t\tconsole.log(canvas.height, canvas.width)\n\n\t\t/*\n\t\tthis.ctx.fillStyle = \"#42b983\"\n\t\tthis.ctx.arc(0,0,50,0, 3.14*2);\n\t\tthis.ctx.fill()\n\t\t*/\n\n\n\n\t\t// Set an array of dot objects.\n\t\tvar dots = [\n\t\t\t{ x: 100, y: 100, radius: 25, xMove: '+', yMove: '+' },\n\t\t\t{ x: 40, y: 200, radius: 25, xMove: '-', yMove: '+' },\n\t\t\t{ x: 250, y: 300, radius: 25, xMove: '+', yMove: '-' },\n\t\t\t{ x: 150, y: 35, radius: 25, xMove: '-', yMove: '-' }\n\t\t];\n\n\t\t// Draw each dot in the dots array.\n\t\tfor(let i = 0; i < dots.length; i++ ) {\n\t\t\tthis.drawDot(dots[i]);\n\t\t}\n\t\t//Set the edge of the canvas to always be window? canvas.attr({height: canvasHeight, width: canvasWidth});\n\n\n\t\t//Get to canvas css?canvas.attr({height: canvas.height, width: canvas.width});\n\t\t/*\n\t\tvar canvas = $('canvas.dots');\n\t\t//var context = canvas[0].getContext('2d');\n\t\tvar canvasWidth = canvas.width();\n\t\tvar canvasHeight = canvas.height();\n\t\tlet i;\n\n\t\tconsole.log(canvasWidth)\n\t\tcanvas.attr({height: canvasHeight, width: canvasWidth});\n\n\n\n\n\n\t\t//window.requestAnimationFrame(moveDot);\n\n\n\n\n\t\t// Render it again\n\t\t//window.requestAnimationFrame(moveDot);\n\t\t*/\n\n\t},\n\n\tmethods: {\n\t\tdrawDot(dot) {\n\t\t\tthis.ctx.beginPath();\n\t\t\tthis.ctx.arc(dot.x, dot.y, dot.radius, 0, 2 * Math.PI, false);\n\t\t\tthis.ctx.fillStyle = '#42b983';\n\t\t\tthis.ctx.fill();\n\t\t},\n\t\tmoveDot(dots) {\n\t\t\t// Notice in the moveDot function we can make dots go faster if we increment\n\t\t\t// by more than 1 pixel each time.\n\t\t\tvar frameLength = 2;\n\n\t\t\tthis.context.clearRect(0, 0, window.innerHeight, window.innerWidth)\n\t\t\t// Iterate over all the dots.\n\t\t\tfor(let i = 0; i < dots.length; i++ ) {\n\n\t\t\t\tif( dots[i].xMove == '+' ) {\n\t\t\t\t\tdots[i].x += frameLength;\n\t\t\t\t} else {\n\t\t\t\t\tdots[i].x -= frameLength;\n\t\t\t\t}\n\t\t\t\tif( dots[i].yMove == '+' ) {\n\t\t\t\t\tdots[i].y += frameLength;\n\t\t\t\t} else {\n\t\t\t\t\tdots[i].y -= frameLength;\n\t\t\t\t}\n\n\t\t\t\tthis.drawDot(dots[i])\n\n\t\t\t\tif( (dots[i].x + dots[i].radius) >= window.innerWidth ) {\n\t\t\t\t\tdots[i].xMove = '-';\n\t\t\t\t}\n\t\t\t\tif( (dots[i].x - dots[i].radius) <= 0 ) {\n\t\t\t\t\tdots[i].xMove = '+';\n\t\t\t\t}\n\t\t\t\tif( (dots[i].y + dots[i].radius) >= window.innerHeight ) {\n\t\t\t\t\tdots[i].yMove = '-';\n\t\t\t\t}\n\t\t\t\tif( (dots[i].y - dots[i].radius) <= 0 ) {\n\t\t\t\t\tdots[i].yMove = '+';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t}\n}\n\n\n\n\n// ----------------------------------------\n\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n\n\n</style>\n"]},"metadata":{},"sourceType":"module"}