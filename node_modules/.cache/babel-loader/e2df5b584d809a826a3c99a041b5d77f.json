{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-783f90ce\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"table\"\n};\nconst _hoisted_2 = {\n  id: \"myTable1\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createCommentVNode(\"-Could change so i read in the Table headers as variables instead\\n\\t\\t\\t\\t\\tThen need to to a valitidy check of the data, so that all items in the json object\\n\\t\\t\\t\\t\\tcontains the same keys and values.\\n\\t\\t\\t\\t\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Employee Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Employee Salary\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Employee Age\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Profile Image\")])], -1\n/* HOISTED */\n));\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"table\", null, [/*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createCommentVNode(\"-\\n\\t\\t\\t\\t<th v-for=\\\"col in columns\\\">\\n\\t\\t\\t\\t\\t{{col}}\\n\\t\\t\\t\\t</th>\\n\\t\\t\\t\")])])], -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"table\", _hoisted_2, [_hoisted_3, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.filledData, (user, i) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: i\n    }, [_createElementVNode(\"td\", null, _toDisplayString(user.id), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(user.employee_name), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(user.employee_salary), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(user.employee_age), 1\n    /* TEXT */\n    ), _createElementVNode(\"td\", null, _toDisplayString(user.profile_image), 1\n    /* TEXT */\n    )]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]), _hoisted_4, _createElementVNode(\"p\", null, _toDisplayString($data.filledData), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;;;;AACOA,OAAK,EAAC;;;AACLC,IAAE,EAAC;;;gEACTC,oBAYQ,OAZR,EAYQ,IAZR,EAYQ,cAXPA,oBAUK,IAVL,EAUK,IAVL,EAUK,cATJC,8OASI,eALJD,oBAAW,IAAX,EAAW,IAAX,EAAI,IAAJ,CAKI,eAJJA,oBAAsB,IAAtB,EAAsB,IAAtB,EAAI,eAAJ,CAII,eAHJA,oBAAwB,IAAxB,EAAwB,IAAxB,EAAI,iBAAJ,CAGI,eAFJA,oBAAqB,IAArB,EAAqB,IAArB,EAAI,cAAJ,CAEI,eADJA,oBAAsB,IAAtB,EAAsB,IAAtB,EAAI,eAAJ,CACI,CAVL,CAWO,CAZR;;AAAA;;gEAuBDA,oBAWQ,OAXR,EAWQ,IAXR,EAWQ,cAVPA,oBAQQ,OARR,EAQQ,IARR,EAQQ,cAPPA,oBAMK,IANL,EAMK,IANL,EAMK,cALJC,yGAKI,CANL,CAOO,CARR,CAUO,CAXR;;AAAA;;;uBAzBCC,oBAsCM,KAtCN,cAsCM,CArCPF,oBAuBQ,OAvBR,cAuBQ,CAtBPG,UAsBO,EATPH,oBAQQ,OARR,EAQQ,IARR,EAQQ,oBAPPE,oBAMKE,SANL,EAMK,IANL,EAMKC,YANmBC,gBAMnB,EAN6B,CAAtBC,IAAsB,EAAhBC,CAAgB,KAAf;yBAAnBN,oBAMK,IANL,EAMK;AANgCO,SAAG,EAAED;AAMrC,KANL,EAA2C,CAC1CR,oBAAwB,IAAxB,EAAwB,IAAxB,EAAwBU,iBAAhBH,IAAI,CAACR,EAAW,CAAxB,EAAe;AAAA;AAAf,KAD0C,EAE1CC,oBAAkC,IAAlC,EAAkC,IAAlC,EAAkCU,iBAA1BH,IAAI,CAACI,aAAqB,CAAlC,EAA0B;AAAA;AAA1B,KAF0C,EAG1CX,oBAAqC,IAArC,EAAqC,IAArC,EAAqCU,iBAA7BH,IAAI,CAACK,eAAwB,CAArC,EAA4B;AAAA;AAA5B,KAH0C,EAI1CZ,oBAAkC,IAAlC,EAAkC,IAAlC,EAAkCU,iBAA1BH,IAAI,CAACM,YAAqB,CAAlC,EAAyB;AAAA;AAAzB,KAJ0C,EAK1Cb,oBAAkC,IAAlC,EAAkC,IAAlC,EAAkCU,iBAA1BH,IAAI,CAACO,aAAqB,CAAlC,EAA0B;AAAA;AAA1B,KAL0C,CAA3C;GAMK,CANL;;AAAA,GAOO,EARR,CASO,CAvBR,CAqCO,EAbPC,UAaO,EADPf,oBAAuB,GAAvB,EAAuB,IAAvB,EAAuBU,iBAAjBJ,gBAAiB,CAAvB,EAAgB;AAAA;AAAhB,GACO,CAtCN","names":["class","id","_createElementVNode","_createCommentVNode","_createElementBlock","_hoisted_3","_Fragment","_renderList","$data","user","i","key","_toDisplayString","employee_name","employee_salary","employee_age","profile_image","_hoisted_4"],"sourceRoot":"","sources":["/Users/cakste/Desktop/website-v3/src/components/Table.vue"],"sourcesContent":["<template>\n  <div class=\"table\">\n\t<table id=\"myTable1\">\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<!---Could change so i read in the Table headers as variables instead\n\t\t\t\t\tThen need to to a valitidy check of the data, so that all items in the json object\n\t\t\t\t\tcontains the same keys and values.\n\t\t\t\t-->\n\t\t\t\t<th>ID</th>\n\t\t\t\t<th>Employee Name</th>\n\t\t\t\t<th>Employee Salary</th>\n\t\t\t\t<th>Employee Age</th>\n\t\t\t\t<th>Profile Image</th>\n\t\t\t</tr>\n\t\t</thead>\n\t\t<tbody>\n\t\t\t<tr v-for=\"(user, i) in filledData\" :key=\"i\">\n\t\t\t\t<td> {{ user.id }} </td>\n\t\t\t\t<td> {{ user.employee_name}} </td>\n\t\t\t\t<td> {{ user.employee_salary }} </td>\n\t\t\t\t<td> {{ user.employee_age }} </td>\n\t\t\t\t<td> {{ user.profile_image}} </td>\n\t\t\t</tr>\n\t\t</tbody>\n\t</table>\n\t<table>\n\t\t<thead>\n\t\t\t<tr>\n\t\t\t\t<!---\n\t\t\t\t<th v-for=\"col in columns\">\n\t\t\t\t\t{{col}}\n\t\t\t\t</th>\n\t\t\t-->\n\t\t\t</tr>\n\t\t</thead>\n\n\t</table>\n\t<p>{{ filledData }}</p>\n  </div>\n</template>\n\n\n\n<script>\n/* Todo\n\t* Create a refresh button?\n\n\n*/\n\nexport default {\n\tname: 'HelloWorld2',\n\tprops: {\n\t\tmsg2: String,\n\t},\n\n\tdata () {\n\t\treturn {\n\t\t\tusers: null,\n\t\t\tfilledData: null,\n\t\t\tcolumns: null,\n\t\t}\n\t},\n\n\tasync created () {\n\t\tconst data_fetched = false\n\n\t\t//Fetch the data upon creation of the component.\n\t\twhile (data_fetched === false) {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n\t\t\t\tconst response_json = await response.json()\n\n\t\t\t\tthis.users = response_json.data\n\t\t\t\tbreak;\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(\"Error occured\")\n\t\t\t\t// Some type of sleep function? Not really sure how this too many requests occur.\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t}\n\t\tthis.fillOutData()\n\t\t\n\t},\n\n\tcomputed: {\n\t\tgetColumns () {\n\t\t\t//Gets columns based on our computed value.\n\t\t\treturn null\n\t\t},\n\t},\n\n\tmethods: {\n\t\tfillOutData () {\n\t\t\t// We should not assume that all keys are the same in the rows.\n\t\t\tlet keyValues = ['seldom']\n\t\t\tthis.filledData = this.users\n\n\t\t\tfor (let i = 0; i < this.filledData.length; i++) {\n\t\t\t\tfor (let key in this.filledData[i]) {\n\t\t\t\t\tif (!keyValues.includes(key)) {\n\t\t\t\t\t\tkeyValues.push(key)\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log(key)\n\t\t\t\t}\n\t\t\t}\n\t\t\tconsole.log(keyValues)\n\n\t\t\tfor (let i = 0; i < this.filledData.length; i++) {\n\t\t\t\tfor (let j = 0; j < keyValues.length; j++) {\n\t\t\t\t\t//console.log(this.filledData[i][keyValues[j]])\n\t\t\t\t\tconsole.log(keyValues[j])\n\t\t\t\t\tif (!(keyValues[j] in this.filledData[i])) {\n\t\t\t\t\t\tthis.filledData[i][keyValues[j]] = 'unknown';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t}\n}\n</script>\n\n<style scoped>\n\ntable {\n  font-family: 'Open Sans', sans-serif;\n  width: 750px;\n  border-collapse: collapse;\n  border: 3px solid #44475C;\n  margin: 10px 10px 0 10px;\n}\n\ntable th {\n  text-transform: uppercase;\n  text-align: left;\n  background: #44475C;\n  color: #FFF;\n  padding: 8px;\n  min-width: 30px;\n}\n\ntable td {\n  text-align: left;\n  padding: 8px;\n  border-right: 2px solid #7D82A8;\n}\ntable td:last-child {\n  border-right: none;\n}\ntable tbody tr:nth-child(2n) td {\n  background: #D4D8F9;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module"}