{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-8dc7cce2\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"hello\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Table = _resolveComponent(\"Table\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($props.msg), 1\n  /* TEXT */\n  ), _createElementVNode(\"ul\", null, [_createElementVNode(\"h4\", null, \"Exit code of request: \" + _toDisplayString($data.exitCode), 1\n  /* TEXT */\n  )]), _createElementVNode(\"ul\", null, [_createElementVNode(\"h4\", null, \"APIData: \" + _toDisplayString($data.testing), 1\n  /* TEXT */\n  )]), _createVNode(_component_Table)]);\n}","map":{"version":3,"mappings":";;;;;AACOA,OAAK,EAAC;;;;;uBAAXC,oBAWM,KAXN,cAWM,CAVJC,oBAAkB,IAAlB,EAAkB,IAAlB,EAAkBC,iBAAXC,UAAW,CAAlB,EAAU;AAAA;AAAV,GAUI,EARPF,oBAEK,IAFL,EAEK,IAFL,EAEK,CADJA,oBAA6C,IAA7C,EAA6C,IAA7C,EAAI,2BAAsBC,iBAAGE,cAAH,CAA1B,EAAqC;AAAA;AAArC,GACI,CAFL,CAQO,EALPH,oBAGK,IAHL,EAGK,IAHL,EAGK,CAFJA,oBAA+B,IAA/B,EAA+B,IAA/B,EAAI,cAASC,iBAAGE,aAAH,CAAb,EAAuB;AAAA;AAAvB,GAEI,CAHL,CAKO,EADPC,aAASC,gBAAT,CACO,CAXN","names":["class","_createElementBlock","_createElementVNode","_toDisplayString","$props","$data","_createVNode","_component_Table"],"sourceRoot":"","sources":["/Users/cakste/Desktop/website-v3/src/components/Home.vue"],"sourcesContent":["<template>\n  <div class=\"hello\">\n    <h1>{{ msg }}</h1>\n\n\t<ul>\n\t\t<h4>Exit code of request: {{ exitCode }}</h4>\n\t</ul>\n\t<ul>\n\t\t<h4>APIData: {{ testing }}</h4>\n\n\t</ul>\n\t<Table />\n  </div>\n</template>\n\n\n\n<script>\nimport Table from './Table.vue'\n\nexport default {\n\tname: 'HelloWorld',\n\tcomponents: {\n\t\tTable,\n\t},\n\tprops: {\n\t\tmsg: String\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tcount: 1,\n\t\t\tAPIData: [],\n\t\t\texitCode: \"STILL FETCHING...\",\n\t\t\ttesting: [],\n\t\t\tcompleted: false\n\t\t}\n\t},\n\n\tasync mounted() {\n\t\t// Try Async\n\t\tconst response = await fetch(\"http://dummy.restapiexample.com/api/v1/employees\");\n\t\tconst tmp = await response.data;\n\t\tif (response.status == 429) {\n\t\t\tthis.exitCode = \"429\";\n\t\t\tthis.completed = false\n\t\t}\n\t\telse {\n\t\t\tthis.exitCode = \"OK!\"\n\t\t\tconsole.log(tmp)\n\t\t\tthis.completed = true\n\t\t}\n\t\tthis.APIData = tmp;\n\n\n\t\t/* //Not Async\n\t\tfetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n\t\t\t.then(response => {\n\t\t\tthis.APIData = response.data;\n\t\t\tconsole.log(this.APIData)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\talert(error)\n\t\t\t})\n\t\t\tthis.testing = typeof(this.APIData)\n\t\t*/\n\t},\n\n\tmethods: {\n\t\tincrement() {\n\t\t\tthis.count++\n\t\t}\n\t},\n\n}\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}