{"ast":null,"code":"import { createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-b8c705b0\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"hello\"\n}, null, -1\n/* HOISTED */\n));\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"canvas\", {\n  class: \"dots\"\n}, \"Your browser does not support canvas.\", -1\n/* HOISTED */\n));\n\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"skdl\", -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _hoisted_2, _hoisted_3], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;;;gEACCA,oBACM,KADN,EACM;AADDC,OAAK,EAAC;AACL,CADN,EAAkB,IAAlB,EAAkB;AAAA;AAAlB;;gEAEAD,oBAAmE,QAAnE,EAAmE;AAA3DC,OAAK,EAAC;AAAqD,CAAnE,EAAqB,uCAArB,EAA0D;AAAA;AAA1D;;gEACAD,oBAAa,IAAb,EAAa,IAAb,EAAI,MAAJ,EAAQ;AAAA;AAAR;;;6DAHAE,YAEAC,YACAC","names":["_createElementVNode","class","_hoisted_1","_hoisted_2","_hoisted_3"],"sourceRoot":"","sources":["/Users/cakste/Desktop/website-v3/src/components/Dots2.vue"],"sourcesContent":["<template>\n\t<div class=\"hello\">\n\t</div>\n\t<canvas class=\"dots\">Your browser does not support canvas.</canvas>\n\t<h1>skdl</h1>\n</template>\n\n<!--// Access a child components variables? Nice to include their message. -->\n\n<script>\n\nexport default {\n\tname: 'HelloWorld',\n\tcomponents: {\n\n\t},\n\tprops: {\n\t\tmsg: String\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tcount: 1,\n\t\t\tAPIData: [],\n\t\t\texitCode: \"STILL FETCHING...\",\n\t\t\ttesting: [],\n\t\t\tcompleted: false\n\t\t}\n\t},\n\n\tmounted() {\n\t\t// Try Async\n\t\t/*\n\t\tconst response = await fetch(\"http://dummy.restapiexample.com/api/v1/employees\");\n\t\tconst tmp = await response.data;\n\t\tif (response.status == 429) {\n\t\t\tthis.exitCode = \"429\";\n\t\t\tthis.completed = false\n\t\t}\n\t\telse {\n\t\t\tthis.exitCode = \"OK!\"\n\t\t\tconsole.log(tmp)\n\t\t\tthis.completed = true\n\t\t}\n\t\tthis.APIData = tmp;\n\t\t*/\n\n\t\t/* //Not Async\n\t\tfetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n\t\t\t.then(response => {\n\t\t\tthis.APIData = response.data;\n\t\t\tconsole.log(this.APIData)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\talert(error)\n\t\t\t})\n\t\t\tthis.testing = typeof(this.APIData)\n\t\t*/\n\n\t\t// ----------------------------------------\n\n\t\tvar canvas = 'canvas.dots';\n\t\t//var context = canvas[0].getContext('2d');\n\t\tvar canvasWidth = canvas.width();\n\t\tvar canvasHeight = canvas.height();\n\t\tlet i;\n\n\t\tconsole.log()\n\t\tcanvas.attr({height: canvasHeight, width: canvasWidth});\n\n\t\t// Set an array of dot objects.\n\t\tvar dots = [\n\t\t\t{ x: 100, y: 100, radius: 25, xMove: '+', yMove: '+' },\n\t\t\t{ x: 40, y: 200, radius: 25, xMove: '-', yMove: '+' },\n\t\t\t{ x: 250, y: 300, radius: 25, xMove: '+', yMove: '-' },\n\t\t\t{ x: 150, y: 35, radius: 25, xMove: '-', yMove: '-' }\n\t\t];\n\n\t\t// Notice in the moveDot function we can make dots go faster if we increment\n\t\t// by more than 1 pixel each time.\n\t\t//var frameLength = 2;\n\n\t\t// Draw each dot in the dots array.\n\t\tfor( i = 0; i < dots.length; i++ ) {\n\t\t\tthis.drawDot(dots[i]);\n\t\t}\n\n\t\twindow.requestAnimationFrame(moveDot);\n\n\n\n\n\t\t// Render it again\n\t\twindow.requestAnimationFrame(moveDot);\n\n\n\t},\n\n\tmethods: {\n\n\t},\n\n}\n\n\n\n\n// ----------------------------------------\n\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n\n.hello {\n\tmargin: 60px 0px 0px 0px\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}