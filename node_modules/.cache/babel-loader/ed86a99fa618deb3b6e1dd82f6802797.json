{"ast":null,"code":"export default {\n  name: 'backgroundDots',\n  components: {},\n\n  data() {\n    return {\n      ctx: null,\n      dots: null,\n      width: 0,\n      height: 0\n    };\n  },\n\n  mounted() {\n    var canvas = document.getElementById(\"canvas\");\n    this.ctx = canvas.getContext(\"2d\"); // Create random dots.\n\n    this.dots = [];\n    var radius = 25;\n    var signs = ['-', '+'];\n\n    for (let i = 0; i < 8; i++) {\n      var dot = {};\n      dot['x'] = Math.floor(Math.random() * (window.innerWidth - 2 * radius)) + radius;\n      dot['y'] = Math.floor(Math.random() * (window.innerHeight - 2 * radius)) + radius;\n      dot['xMove'] = signs[Math.floor(Math.random() * 2)];\n      dot['yMove'] = signs[Math.floor(Math.random() * 2)];\n      dot['radius'] = radius;\n      this.dots.push(dot);\n    } // Draw each dot in the dots array.\n\n\n    for (let i = 0; i < this.dots.length; i++) {\n      this.drawDot(this.dots[i]);\n    } // Continue to update dots. Update canvas size when window changes size.\n\n\n    window.setInterval(() => {\n      document.getElementById(\"canvas\").width = window.innerWidth;\n      document.getElementById(\"canvas\").height = window.innerHeight;\n      this.moveDot();\n    }, 15);\n  },\n\n  methods: {\n    drawDot(dot) {\n      this.ctx.beginPath();\n      this.ctx.arc(dot.x, dot.y, dot.radius, 0, 2 * Math.PI, false);\n      this.ctx.fillStyle = '#1e0072';\n      this.ctx.fill();\n    },\n\n    moveDot() {\n      var dots = this.dots;\n      var frameLength = 2;\n      this.ctx.clearRect(0, 0, window.outerWidth, window.outerHeight); // Iterate over all the dots.\n\n      for (let i = 0; i < dots.length; i++) {\n        if (dots[i].xMove == '+') {\n          dots[i].x += frameLength;\n        } else {\n          dots[i].x -= frameLength;\n        }\n\n        if (dots[i].yMove == '+') {\n          dots[i].y += frameLength;\n        } else {\n          dots[i].y -= frameLength;\n        }\n\n        this.drawDot(dots[i]);\n\n        if (dots[i].x + dots[i].radius >= window.innerWidth) {\n          dots[i].xMove = '-';\n        }\n\n        if (dots[i].x - dots[i].radius <= 0) {\n          dots[i].xMove = '+';\n        }\n\n        if (dots[i].y + dots[i].radius >= window.innerHeight) {\n          dots[i].yMove = '-';\n        }\n\n        if (dots[i].y - dots[i].radius <= 0) {\n          dots[i].yMove = '+';\n        }\n      }\n    }\n\n  }\n}; // ----------------------------------------","map":{"version":3,"mappings":"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","names":["name","components","data","ctx","dots","width","height","mounted","canvas","document","getElementById","getContext","radius","signs","i","dot","Math","floor","random","window","innerWidth","innerHeight","push","length","drawDot","setInterval","moveDot","methods","beginPath","arc","x","y","PI","fillStyle","fill","frameLength","clearRect","outerWidth","outerHeight","xMove","yMove"],"sourceRoot":"","sources":["/Users/cakste/test/greater_work/src/components/Dots.vue"],"sourcesContent":["<template>\n\n\t<canvas id=\"canvas\"></canvas>\n</template>\n\n<script>\n\nexport default {\n\tname: 'backgroundDots',\n\tcomponents: {\n\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tctx: null,\n\t\t\tdots: null,\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t}\n\t},\n\n\tmounted() {\n\t\tvar canvas = document.getElementById(\"canvas\");\n\t\tthis.ctx = canvas.getContext(\"2d\");\n\n\t\t// Create random dots.\n\t\tthis.dots = []\n\t\tvar radius = 25;\n\t\tvar signs = ['-', '+']\n\t\tfor (let i = 0; i < 8; i++) {\n\t\t\tvar dot = {};\n\t\t\tdot['x'] = Math.floor(Math.random()*(window.innerWidth-2*radius)) + radius\n\t\t\tdot['y'] = Math.floor(Math.random()*(window.innerHeight-2*radius)) + radius\n\t\t\tdot['xMove'] = signs[Math.floor(Math.random()*2)]\n\t\t\tdot['yMove'] = signs[Math.floor(Math.random()*2)]\n\t\t\tdot['radius'] = radius\n\t\t\tthis.dots.push(dot)\n\t\t}\n\n\t\t// Draw each dot in the dots array.\n\t\tfor (let i = 0; i < this.dots.length; i++) {\n\t\t\tthis.drawDot(this.dots[i]);\n\t\t}\n\n\t\t// Continue to update dots. Update canvas size when window changes size.\n\t\twindow.setInterval(() => {\n\t\t\tdocument.getElementById(\"canvas\").width = window.innerWidth\n\t\t\tdocument.getElementById(\"canvas\").height = window.innerHeight\n\t\t\tthis.moveDot()\n\t\t}, 15)\n\t},\n\n\tmethods: {\n\t\tdrawDot(dot) {\n\t\t\tthis.ctx.beginPath()\n\t\t\tthis.ctx.arc(dot.x, dot.y, dot.radius, 0, 2 * Math.PI, false)\n\t\t\tthis.ctx.fillStyle = '#1e0072'\n\t\t\tthis.ctx.fill()\n\t\t},\n\t\tmoveDot() {\n\n\t\t\tvar dots = this.dots\n\t\t\tvar frameLength = 2\n\n\t\t\tthis.ctx.clearRect(0, 0, window.outerWidth, window.outerHeight)\n\n\t\t\t// Iterate over all the dots.\n\t\t\tfor(let i = 0; i < dots.length; i++ ) {\n\n\t\t\t\tif( dots[i].xMove == '+' ) {\n\t\t\t\t\tdots[i].x += frameLength\n\t\t\t\t} else {\n\t\t\t\t\tdots[i].x -= frameLength\n\t\t\t\t}\n\t\t\t\tif( dots[i].yMove == '+' ) {\n\t\t\t\t\tdots[i].y += frameLength\n\t\t\t\t} else {\n\t\t\t\t\tdots[i].y -= frameLength\n\t\t\t\t}\n\n\t\t\t\tthis.drawDot(dots[i])\n\n\t\t\t\tif ((dots[i].x + dots[i].radius) >= window.innerWidth ) {\n\t\t\t\t\tdots[i].xMove = '-';\n\t\t\t\t}\n\t\t\t\tif ((dots[i].x - dots[i].radius) <= 0 ) {\n\t\t\t\t\tdots[i].xMove = '+';\n\t\t\t\t}\n\t\t\t\tif ((dots[i].y + dots[i].radius) >= window.innerHeight ) {\n\t\t\t\t\tdots[i].yMove = '-';\n\t\t\t\t}\n\t\t\t\tif ((dots[i].y - dots[i].radius) <= 0 ) {\n\t\t\t\t\tdots[i].yMove = '+';\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t}\n}\n\n\n\n\n// ----------------------------------------\n\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n\n\n</style>\n"]},"metadata":{},"sourceType":"module"}