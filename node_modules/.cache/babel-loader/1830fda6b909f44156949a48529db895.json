{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-8dc7cce2\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"Home\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"img\", {\n  alt: \"Greater Than Logo Straight From The Source\",\n  src: \"https://greaterthan.eu/wp-content/themes/greaterthan/assets/img/logo.svg\"\n}, null, -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Table = _resolveComponent(\"Table\");\n\n  const _component_Dots2 = _resolveComponent(\"Dots2\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createVNode(_component_Table), _createVNode(_component_Dots2)]);\n}","map":{"version":3,"mappings":";;;;;AACMA,OAAK,EAAC;;;gEACVC,oBAAqI,KAArI,EAAqI;AAAhIC,KAAG,EAAC,4CAA4H;AAA/EC,KAAG,EAAC;AAA2E,CAArI;;AAAA;;;;;;;uBADDC,oBAKM,KALN,cAKM,CAJLC,UAIK,EAHLC,aAASC,gBAAT,CAGK,EAFLD,aAASE,gBAAT,CAEK,CALN","names":["class","_createElementVNode","alt","src","_createElementBlock","_hoisted_2","_createVNode","_component_Table","_component_Dots2"],"sourceRoot":"","sources":["/Users/cakste/Desktop/website-v3/src/components/Home.vue"],"sourcesContent":["<template>\n\t<div class=\"Home\">\n\t\t<img alt=\"Greater Than Logo Straight From The Source\" src=\"https://greaterthan.eu/wp-content/themes/greaterthan/assets/img/logo.svg\">\n\t\t<Table />\n\t\t<Dots2 />\n\n\t</div>\n\n</template>\n\n<!--// Access a child components variables? Nice to include their message. -->\n\n<script>\nimport Table from './Table.vue'\nimport Dots2 from './Dots2.vue'\n\nexport default {\n\tname: 'HelloWorld',\n\tcomponents: {\n\t\tTable,\n\t\tDots2,\n\t},\n\tprops: {\n\t\tmsg: String\n\t},\n\n\tdata() {\n\t\treturn {\n\t\t\tcount: 1,\n\t\t\tAPIData: [],\n\t\t\texitCode: \"STILL FETCHING...\",\n\t\t\ttesting: [],\n\t\t\tcompleted: false\n\t\t}\n\t},\n\n\tasync mounted() {\n\t\t// Try Async\n\t\t/*\n\t\tconst response = await fetch(\"http://dummy.restapiexample.com/api/v1/employees\");\n\t\tconst tmp = await response.data;\n\t\tif (response.status == 429) {\n\t\t\tthis.exitCode = \"429\";\n\t\t\tthis.completed = false\n\t\t}\n\t\telse {\n\t\t\tthis.exitCode = \"OK!\"\n\t\t\tconsole.log(tmp)\n\t\t\tthis.completed = true\n\t\t}\n\t\tthis.APIData = tmp;\n\t\t*/\n\n\t\t/* //Not Async\n\t\tfetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n\t\t\t.then(response => {\n\t\t\tthis.APIData = response.data;\n\t\t\tconsole.log(this.APIData)\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\talert(error)\n\t\t\t})\n\t\t\tthis.testing = typeof(this.APIData)\n\t\t*/\n\t},\n\n\tmethods: {\n\t\tincrement() {\n\t\t\tthis.count++\n\t\t}\n\t},\n\n}\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n\n.hello {\n\tmargin: 80px 0px 0px 0px\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}