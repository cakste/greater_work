{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"table\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Hello Table\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"h1\", null, _toDisplayString($props.msg2), 1\n  /* TEXT */\n  ), _hoisted_2, _createElementVNode(\"p\", null, _toDisplayString($data.users), 1\n  /* TEXT */\n  ), _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.datalist, (item, i) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: i\n    }, _toDisplayString(item.propertyToDisplay), 1\n    /* TEXT */\n    );\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;gCAEZC,oBAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ,EAAe;AAAA;AAAf;;;uBAFCC,oBASM,KATN,cASM,CARJD,oBAAoB,IAApB,EAAoB,IAApB,EAAoBE,iBAAZC,WAAY,CAApB,EAAY;AAAA;AAAZ,GAQI,EAPPC,UAOO,EANPJ,oBAAoB,GAApB,EAAoB,IAApB,EAAoBE,iBAAbG,WAAa,CAApB,EAAY;AAAA;AAAZ,GAMO,EALPL,oBAIK,IAJL,EAIK,IAJL,EAIK,oBAHJC,oBAEKK,SAFL,EAEK,IAFL,EAEKC,YAFmBC,aAEnB,EAF2B,CAApBC,IAAoB,EAAdC,CAAc,KAAb;yBAAnBT,oBAEK,IAFL,EAEK;AAF8BU,SAAG,EAAED;AAEnC,KAFL,EAAyCR,iBACrCO,IAAI,CAACG,iBADgC,CAAzC,EAC0B;AAAA;AAD1B;GAEK,CAFL;;AAAA,GAGI,EAJL,CAKO,CATN","names":["class","_createElementVNode","_createElementBlock","_toDisplayString","$props","_hoisted_2","$data","_Fragment","_renderList","_ctx","item","i","key","propertyToDisplay"],"sourceRoot":"","sources":["/Users/cakste/Desktop/website-v3/src/components/Table.vue"],"sourcesContent":["<template>\n  <div class=\"table\">\n    <h1> {{ msg2 }}</h1>\n\t<h1>Hello Table</h1>\n\t<p> {{ users }} </p>\n\t<ul>\n\t\t<li v-for=\"(item, i) in datalist\" :key=\"i\">\n\t\t\t{{ item.propertyToDisplay }}\n\t\t</li>\n\t</ul>\n  </div>\n</template>\n\n<script>\nexport default {\n\tname: 'HelloWorld2',\n\tprops: {\n\t\tmsg2: String,\n\t},\n\n\tdata () {\n\t\treturn {\n\t\t\tusers: null,\n\t\t}\n\t},\n\n\tasync created () {\n\t\tconst data_fetched = false\n\n\t\twhile (data_fetched === false) {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n\t\t\t\tconst response_json = await response.json()\n\n\t\t\t\tthis.users = response_json.data\n\t\t\t\tbreak;\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(\"Error occured\")\n\t\t\t\t// Some type of sleep function? Not really sure how this too many requests occur.\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t}\n\n\t\t/*\n\t\tconst response = await fetch(\"http://dummy.restapiexample.com/api/v1/employees\")\n\t\tconst response_json = await response.json()\n\n\t\tthis.users = response_json.data\n\t\t// need to do error handling.\n\t\t*/\n\t},\n}\n</script>\n"]},"metadata":{},"sourceType":"module"}